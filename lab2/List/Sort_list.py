# Объекты списка имеют sort()метод, который сортирует список по алфавиту и по возрастанию по умолчанию:

my_list = ["s","d","f","a","b"]
my_list.sort()
print(my_list)

thislist = [100, 50, 65, 82, 23]
thislist.sort()
print(thislist)

# Для сортировки по убыванию используйте ключевой аргумент reverse = True:
my_list = ["s","d","f","a","b"]
my_list.sort(reverse=True)
print(my_list)

# Вы также можете настроить свою собственную функцию, используя ключевой аргумент .key = function

# Функция вернет число, которое будет использоваться для сортировки списка (сначала наименьшее число):

# Отсортируйте список по степени близости числа к 50:


def myfunc(n):
    return(n-50)

thislist=[100, 50, 65, 82, 23]
thislist.sort(key=myfunc)
print(thislist)


# По умолчанию sort()метод чувствителен к регистру, в результате чего все заглавные буквы сортируются перед строчными:

# Сортировка с учетом регистра может дать неожиданный результат:

thislist = ["a","b","c","M",'N',"O"]
thislist.sort()
print(thislist)

# Выполните сортировку списка без учета регистра:
thislist = ["a","b","c","M",'N',"O"]
thislist.sort(key=str.lower)
print(thislist)

# Метод reverse()меняет текущий порядок сортировки элементов на противоположный.
thislist =["a","b","c","M",'N',"O"]
thislist.reverse()
print(thislist)
